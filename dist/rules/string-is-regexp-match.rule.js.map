{"version":3,"file":"string-is-regexp-match.rule.js","sourceRoot":"","sources":["../../src/app/rules/string-is-regexp-match.rule.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,kCAAkC,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAA;AAEhE;IAA6C,2CAAa;IAEtD,iCACI,IAAY,EACZ,OAAe,EACP,MAAc,EACd,UAAkB,EAC1B,aAAsB;QAL1B,YAOI,kBAAM,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,SAEtC;QANW,YAAM,GAAN,MAAM,CAAQ;QACd,gBAAU,GAAV,UAAU,CAAQ;QAI1B,KAAI,CAAC,cAAc,EAAE,CAAC;;IAC1B,CAAC;IAED,gDAAc,GAAd;QACI,IAAM,kBAAkB,GAAY,IAAI,CAAC;QACzC,IAAM,sBAAsB,GAAY,KAAK,CAAC;QAE9C,6CAA6C;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CACX,IAAI,KAAK,CAAC,oBAAoB,CAC1B,4BAA4B,EAC1B,wCAAwC,EACxC,IAAI,CAAC,MAAM,EACX,sBAAsB,CAC3B,CACJ,CAAC;QACF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,IAAI,CACX,IAAI,KAAK,CAAC,MAAM,CACZ,qBAAqB,EACnB,kCAAkC,EAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EACjC,sBAAsB,CAC3B,CACJ,CAAC;QACN,CAAC;IACL,CAAC;IACL,8BAAC;AAAD,CAAC,AArCD,CAA6C,aAAa,GAqCzD","sourcesContent":["import * as rules from 'angular-rules-engine/rules/index';\r\nimport { CompositeRule } from 'angular-rules-engine/rules/index'\r\n\r\nexport class StringIsRegExpMatchRule extends CompositeRule {\r\n\r\n    constructor(\r\n        name: string,\r\n        message: string,\r\n        private target: string,\r\n        private expression: RegExp,\r\n        isDisplayable: boolean\r\n    ) {\r\n        super(name, message, isDisplayable);\r\n        this.configureRules();\r\n    }\r\n\r\n    configureRules() {\r\n        const showRuleViolations: boolean = true;\r\n        const doNotShowRuleViolation: boolean = false;\r\n\r\n        // determine if the target is a valid object;\r\n        this.rules.push(\r\n            new rules.IsNotNullOrUndefined(\r\n                'StringIsNotNullOrUndefined'\r\n                , 'The target value is null or undefined.'\r\n                , this.target\r\n                , doNotShowRuleViolation\r\n            )\r\n        );\r\n        if (this.target) {\r\n            this.rules.push(\r\n                new rules.IsTrue(\r\n                    'StringIsRegExpMatch'\r\n                    , 'The target value is not a match.'\r\n                    , this.expression.test(this.target)\r\n                    , doNotShowRuleViolation\r\n                )\r\n            );\r\n        }\r\n    }\r\n}\r\n"]}